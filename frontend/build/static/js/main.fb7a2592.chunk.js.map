{"version":3,"sources":["set-global.js","api.js","create-fetcher.js","LandingPage.js","history.js","FoodCart-class.js","OrderManage.js","FoodManage.js","DeskManage.js","AddFood.js","AddDesk.js","RestaurantManage.js","Login.js","forget.js","register.js","OrderSuccess.js","App.js","serviceWorker.js","index.js"],"names":["window","axios","baseURL","frontURL","api","create","withCredentials","f","cache","clearCache","read","args","key","join","then","val","fetcher","createFetcher","did","get","catch","error","console","log","DeskInfo","info","data","title","name","withRouter","props","match","params","rid","useState","count","useCount","className","fallback","map","onClick","history","push","createHashHistory","MenuItem","food","onUpdate","amount","updateCount","num","src","img","alt","desc","price","type","theme","CartItem","cart","obj","id","Category","categoryMap","Object","entries","ary","anchorName","anchorElement","document","getElementById","scrollIntoView","go","getTotalPrice","reduce","total","ShoppingCart","order","clearCart","show","setShow","length","MenuInfo","menu","cartChange","category","res","currentAmount","currFoodCartItem","find","cartItem","status","unshift","ref","createRef","foodWindowRef","FoodCart","socket","emit","desk","foodChange","updated","produce","state","idx","findIndex","it","splice","setState","from","deskName","deskInfo","totalPrice","customCount","customerCount","foods","post","pathname","this","menuObj","categoryMapObj","menuData","forEach","ioUrl","split","io","on","close","Component","orderItemStyle","margin","width","OrderItem","onDelete","orderInfo","setOrder","changeStatus","statu","put","style","delete","e","values","details","OrderManage","orders","display","flexWrap","FoodItem","setFoods","change","setChange","fd","setFoodData","removeItem","a","newFoods","filter","changeFd","target","value","imgChange","file","files","onChange","size","FormData","append","newFood","updateData","useEffect","to","QRCode","require","deskItemStyle","border","padding","DeskItem","setDeskInfo","setValue","deleteDesk","update","submit","capacity","text","querySelector","toDataURL","err","url","classList","remove","DeskManage","add","foodData","goBack","deskData","setDeskData","dd","userInfoFetcher","RestaurantInfo","mode","path","component","FoodManage","AddFood","AddDesk","setName","password","setPassword","dir","alert","response","msg","placeholder","Password","login","email","setEmail","useRef","current","innerHTML","setData","action","method","location","App","exact","Login","LandingPage","OrderSuccess","RestaurantManage","forget","register","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb7a2592.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nwindow.axios = axios\r\n// window.baseURL = 'http://localhost:8080/'\r\nwindow.baseURL = 'http://zkylearner.top:8080/'\r\nwindow.frontURL = 'http://zkylearner.top:5000/'\r\n","import axios from 'axios'\r\n\r\nvar api = axios.create({\r\n  // baseURL: 'http://localhost:8080',\r\n  // baseURL: 'http://192.168.137.1:8080',\r\n  baseURL: window.baseURL,\r\n  // 携带证书\r\n  withCredentials: true,\r\n})\r\n\r\nexport default api\r\n","\r\nexport default function(f) {\r\n  var cache = {}\r\n\r\n  return {\r\n    clearCache() {\r\n      cache = {}\r\n    },\r\n    read(...args) {\r\n      var key = args.join('|')\r\n\r\n      if (key in cache) {\r\n        return cache[key]\r\n      } else {\r\n        throw f(...args).then(val => {\r\n          cache[key] = val\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","import React,{ Suspense, useState } from 'react';\r\nimport { Button } from 'antd'\r\nimport {withRouter} from 'react-router-dom'\r\nimport api from \"./api\"\r\nimport createFetcher from './create-fetcher'\r\n\r\nvar fetcher = createFetcher((did) => {\r\n  return api.get('/deskinfo/' + did)\r\n  .catch(function (error) {\r\n    console.log(error);\r\n  })\r\n})\r\n\r\nfunction DeskInfo({did}) {\r\n  var info = fetcher.read(did).data\r\n  \r\n  return (\r\n    <div>\r\n      <span>{info.title}</span>\r\n      -\r\n      <span>{info.name}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(function(props){\r\n  let {rid, did} = props.match.params\r\n  let [count, useCount] = useState(0)\r\n\r\n  function startOrder() {\r\n    // 路由跳转页面\r\n    props.history.push(`/r/${rid}/d/${did}/c/${count}`)\r\n  }\r\n\r\n  return (\r\n    <div className=\"LandingPage\">\r\n      <div className=\"LandingPageBox\">\r\n        <Suspense fallback={<div>正在加载桌面信息...</div>}>\r\n          <DeskInfo did={did} />\r\n        </Suspense>\r\n        <h2>请选择点餐人数</h2>\r\n        <ul className=\"custom-count\">\r\n          {\r\n            [1,2,3,4,5,6,7,8].map(val => {\r\n              return <li key={val} className={count === val ? 'active': null} onClick={()=>useCount(val)}>{val}</li>\r\n            })\r\n          }\r\n        </ul>\r\n        <Button onClick={startOrder}>开始点餐</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n})","import { createHashHistory } from 'history'\r\n\r\nconst history = createHashHistory()\r\n\r\nexport default history\r\n","import React,{ useState, createRef, Component} from 'react'\r\nimport { Button, Icon } from 'antd'\r\nimport api from './api'\r\nimport history from './history'\r\nimport { produce } from 'immer'\r\nimport io from 'socket.io-client'\r\n\r\nfunction MenuItem({food, onUpdate, amount}){\r\n  function updateCount(food, num){\r\n    if(num === -1 && amount === 0)return\r\n    onUpdate(food, amount + num)\r\n  }\r\n\r\n  return (\r\n    <div className='foodMBox foodCardBox'>\r\n      <img src={window.baseURL + 'upload/' + food.img} alt={food.name}></img>\r\n      <h3>{food.name}</h3>\r\n      <p>{food.desc}</p>\r\n      <footer>\r\n        <span>￥{food.price}</span>\r\n        <span className='counter'>\r\n          {amount > 0 && <Icon type=\"minus-circle\" theme=\"twoTone\" onClick={()=>updateCount(food, -1) } />}\r\n          {amount > 0 && <span>{amount}</span>}\r\n          <Icon type=\"plus-circle\" theme=\"twoTone\" onClick={()=>updateCount(food, 1)} />\r\n        </span>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CartItem({cart}){\r\n  return (\r\n    cart.map(obj => {\r\n      let {id, name, price} = obj.food\r\n      return (\r\n        <tr key={id}>\r\n          <td>{name}</td>\r\n          <td>{obj.amount}</td>\r\n          <td>{price}</td>\r\n        </tr>\r\n      )\r\n    })\r\n  )\r\n}\r\n\r\nfunction go(anchorName){\r\n  // console.log(anchorName)\r\n  if (anchorName) {\r\n    let anchorElement = document.getElementById(anchorName);\r\n    if(anchorElement) { anchorElement.scrollIntoView() }\r\n  }\r\n}\r\n\r\nfunction Category({categoryMap}){\r\n  return Object.entries(categoryMap).map(ary =>\r\n    <p key={ary[1]} onClick={() => go(ary[1])} >{ary[0]}</p>\r\n  )\r\n}\r\n\r\nfunction getTotalPrice(cart){\r\n  return cart.reduce((total, obj) => {\r\n    return total + obj.food.price * obj.amount\r\n  }, 0)\r\n}\r\n\r\nfunction ShoppingCart({cart, order, clearCart}){\r\n  let [show, setShow] = useState(false)\r\n\r\n  function updateShow(){\r\n    setShow(!show)\r\n    // if(show){\r\n    //   foodWindowRef.current.classList.remove('gray')\r\n    // }else{\r\n    //   foodWindowRef.current.classList.add('gray')\r\n    // }\r\n  }\r\n\r\n  return(\r\n    <div className='ShoppingCart' >\r\n      {show && (cart.length > 0 ? \r\n        <div className='shoppingList' >\r\n          <span className='clearCart' onClick={() => {clearCart();setShow(!show)}} ><Icon type=\"delete\" theme=\"twoTone\"/>清空</span>\r\n          <h3>已选商品</h3>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <th>名称</th>\r\n                <th>数量</th>\r\n                <th>单价</th>\r\n              </tr>\r\n              <CartItem cart={cart} />\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        :<p>暂无商品</p>)\r\n      }\r\n      <footer>\r\n        <Button onClick={updateShow} >{show ? '收起' : '展开'}</Button>\r\n        <span>￥{getTotalPrice(cart)}</span>\r\n        <Button className='submit' onClick={() => order()} >下单</Button>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction MenuInfo({menu, cart, cartChange}){\r\n  return Object.entries(menu).map(ary =>{\r\n    let key = ary[1][0].category\r\n    let res = ary[1].map(food =>{\r\n      var currentAmount = 0\r\n      var currFoodCartItem = cart.find(cartItem => cartItem.food.id === food.id)\r\n      if (currFoodCartItem) {\r\n        currentAmount = currFoodCartItem.amount\r\n      }\r\n      return food.status ? <MenuItem key={food.id} food={food} amount={currentAmount}\r\n        onUpdate={cartChange} /> : <div key={food.id}></div>\r\n    })\r\n    res.unshift(<h3 key={ary[0]} id={ary[0]} >{key}</h3>)\r\n    // console.log(res)\r\n    return res\r\n  })\r\n}\r\n\r\nconst ref = createRef()\r\nconst foodWindowRef = createRef()\r\n\r\nexport default class FoodCart extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      cart: [],\r\n      menu: {},\r\n      deskInfo: {},\r\n      categoryMap: {},\r\n    }\r\n    this.rid = props.match.params.rid\r\n    this.did = props.match.params.did\r\n    this.customerCount = props.match.params.count\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = '点餐页面'\r\n    api.get('/deskinfo/' + this.did).then(val => {\r\n      this.setState({\r\n        deskInfo: val.data,\r\n      })\r\n    })\r\n\r\n    api.get(`/restaurant/${this.rid}/food`).then(res => {\r\n      // 菜单分类处理\r\n      let menuObj = {}\r\n      let categoryMapObj = {}\r\n      let menuData = res.data\r\n      let count = 0\r\n      \r\n      menuData.forEach(food => {\r\n        // 过滤掉下架的菜品\r\n        if(!food.status)return\r\n        let key = food.category\r\n        if(!categoryMapObj[key]){\r\n          categoryMapObj[key] = 'category' + ++count\r\n          menuObj[categoryMapObj[key]] = []\r\n        }\r\n        menuObj[categoryMapObj[key]].push(food)\r\n      })\r\n      this.setState({\r\n        menu: menuObj,\r\n        categoryMap: categoryMapObj,\r\n      })\r\n    })\r\n\r\n    let ioUrl = 'ws' + window.baseURL.split('http')[1]\r\n    this.socket = io(ioUrl)\r\n\r\n    this.socket.on('connect', () => {\r\n      this.socket.emit('join desk', 'desk:' + this.did)\r\n    })\r\n\r\n    // 后端发回此桌面已点菜单\r\n    this.socket.on('cart food', info => {\r\n      // console.log('cart init', info)\r\n      this.setState(produce(state => {\r\n        state.cart.push(...info)\r\n      }))\r\n    })\r\n\r\n    // 来自同桌其它用户新增的菜单\r\n    this.socket.on('new food', info => {\r\n      // console.log(info)\r\n      this.foodChange(info.food, info.amount)\r\n    })\r\n\r\n    this.socket.on('clear cart', info => {\r\n      this.setState({cart: []})\r\n    })\r\n\r\n    this.socket.on('placeorder success', order => {\r\n      history.push({\r\n        pathname: `/r/${this.rid}/d/${this.did}/order-success`,\r\n        state: order,\r\n      })\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.socket.close()\r\n  }\r\n\r\n  cartChange = (food, amount) => {\r\n    this.socket.emit('new food', {desk: 'desk:' + this.did, food, amount})\r\n  }\r\n\r\n  foodChange = (food, amount) => {\r\n    var updated = produce(this.state.cart, cart => {\r\n      var idx = cart.findIndex(it => it.food.id === food.id)\r\n\r\n      if (idx >= 0) {\r\n        if (amount === 0) {\r\n          cart.splice(idx, 1)\r\n        } else {\r\n          cart[idx].amount = amount\r\n        }\r\n      } else {\r\n        cart.push({\r\n          food,\r\n          amount,\r\n        })\r\n      }\r\n    })\r\n    this.setState({cart: updated})\r\n  }\r\n\r\n  order = () => {\r\n    // console.log('下单')\r\n    let from = {\r\n      deskName: this.state.deskInfo.name,\r\n      totalPrice: getTotalPrice(this.state.cart),\r\n      customCount: this.customerCount,\r\n      foods: this.state.cart,\r\n    }\r\n  \r\n    api.post(`/restaurant/${this.rid}/desk/${this.did}/order`, from)\r\n    .then(res => {\r\n      history.push({\r\n        pathname: `/r/${this.rid}/d/${this.did}/order-success`,\r\n        state: res.data,\r\n      })\r\n    })\r\n  }\r\n\r\n  clearCart = () => {\r\n    this.setState({cart: []})\r\n    this.socket.emit('clear cart', {desk: 'desk:' + this.did})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='foodWindow' ref={foodWindowRef}>\r\n        <aside>\r\n          <Category categoryMap={this.state.categoryMap} />\r\n        </aside>\r\n        <main ref={ref}>\r\n          <MenuInfo menu={this.state.menu} cart={this.state.cart} cartChange={this.cartChange}></MenuInfo>\r\n        </main>\r\n        <ShoppingCart cart={this.state.cart} order={this.order} clearCart={this.clearCart} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component, useState } from 'react'\r\nimport io from 'socket.io-client'\r\nimport api from './api'\r\nimport { Button, Card } from 'antd'\r\nimport { produce } from 'immer'\r\n\r\nvar orderItemStyle = {\r\n  margin: '10px',\r\n  width: '320px'\r\n}\r\n\r\nfunction OrderItem({order, onDelete}) {\r\n  let [orderInfo, setOrder] = useState(order)\r\n  let [show, setShow] = useState(false)\r\n  let status = ['pending', 'confirmed', 'completed']\r\n\r\n  function OrderDetails(){\r\n    return(\r\n      <div className='order-details'>\r\n        <ul>\r\n          <li>\r\n            <span>菜品</span>\r\n            <span>价格</span>\r\n            <span>数量</span>\r\n          </li>\r\n          {\r\n            Object.values(orderInfo.details).map(it => {\r\n              return (\r\n                <li key={it.food.id}>\r\n                  <span>{it.food.name}</span>\r\n                  <span>{it.food.price}</span>\r\n                  <span>{it.amount}</span>\r\n                </li>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function changeStatus(statu){\r\n    api.put(`/restaurant/${order.rid}/order/${order.id}/status`, {\r\n      status: statu\r\n    }).then(() => {\r\n      setOrder({\r\n        ...orderInfo,\r\n        status: statu\r\n      })\r\n    })\r\n  }\r\n\r\n  function deleteOrder() {\r\n    api.delete(`/restaurant/${order.rid}/order/${order.id}`).then(() => {\r\n      onDelete(order)\r\n    }).catch(e => console.log(e))\r\n  }\r\n\r\n  return (\r\n    <div style={orderItemStyle}>\r\n      <Card title={orderInfo.deskName} >\r\n        <p>总价格：￥{orderInfo.totalPrice}</p>\r\n        <p>人数：{orderInfo.customCount}</p>\r\n        <p>订单状态：{orderInfo.status}</p>\r\n        <div>\r\n          <Button onClick={() => {setShow(!show)}}>详情</Button>\r\n          <Button onClick={() => changeStatus(status[1])}>确认</Button>\r\n          <Button onClick={() => changeStatus(status[2])}>完成</Button>\r\n          <Button onClick={deleteOrder}>删除</Button>\r\n        </div>\r\n        {show ? <OrderDetails /> : ''}\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default class OrderManage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      orders: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    let ioUrl = 'ws' + window.baseURL.split('http')[1]\r\n    this.socket = io(ioUrl)\r\n\r\n    this.socket.on('new order', order => {\r\n      this.setState(produce(state => {\r\n        state.orders.unshift(order)\r\n      }))\r\n    })\r\n    \r\n    api.get(`/restaurant/1/order`).then(res => {\r\n      this.setState(produce(state => {\r\n        state.orders = res.data\r\n      }))\r\n    })\r\n  }\r\n\r\n  onDelete = (order) => {\r\n    var idx = this.state.orders.findIndex(it => it.id === order.id)\r\n\r\n    this.setState(produce(state => {\r\n      state.orders.splice(idx, 1)\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div style={{display:'flex', flexWrap:'wrap'}}>\r\n        {\r\n          this.state.orders.map(order => {\r\n            return <OrderItem onDelete={this.onDelete} key={order.id} order={order} />\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import React,{useEffect, useState} from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { Button, Input } from 'antd'\r\nimport api from './api'\r\n\r\nfunction FoodItem({food, obj:{foods,setFoods}}){\r\n  let [change, setChange] = useState(false)\r\n  let [fd, setFoodData] = useState(food)\r\n\r\n  function updateData(){\r\n    var data = new FormData()\r\n    for(var key in fd) {\r\n      var val = fd[key]\r\n      if(key === 'status'){\r\n        // 布尔值转数字\r\n        data.append(key, +val)\r\n      }else{\r\n        if(val)data.append(key, val)\r\n      }\r\n    }\r\n    api.put(`/restaurant/${food.rid}/food/${food.id}`, data)\r\n    .then(res=>{\r\n      let newFood = res.data\r\n      setFoodData(newFood)\r\n      let newFoods = foods.map(it=>{\r\n        if(it.id === newFood.id){\r\n          return newFood\r\n        }else{\r\n          return it\r\n        }\r\n      })\r\n      setFoods(newFoods)\r\n    })\r\n    .catch(e=>console.log('菜品数据更新错误: ' + e))\r\n    setChange(false)\r\n  }\r\n\r\n  async function removeItem(){\r\n    await api.delete(`/restaurant/${food.rid}/food/${food.id}`)\r\n      .catch(e => console.log(e))\r\n    let newFoods = foods.filter(it=> it.id !== food.id)\r\n    setFoods(newFoods)\r\n  }\r\n\r\n  function changeFd(e) {\r\n    setFoodData({\r\n      ...fd,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  function imgChange(e) {\r\n    let file = e.target.files[0]\r\n    setFoodData({\r\n      ...fd,\r\n      img: file ? file : fd.img,\r\n    })\r\n  }\r\n\r\n  function getContent(){\r\n    if(change){\r\n      // 修改页面\r\n      return(\r\n        <div className='changeFoodPage'>\r\n          <ul>\r\n            <li>名称：<Input type='text' value={fd.name} onChange={changeFd} name='name' /></li>\r\n            <li>价格：<Input type='text' value={fd.price} onChange={changeFd} name='price' /></li>\r\n            <li>分类：<Input type='text' value={fd.category} onChange={changeFd} name='category' /></li>\r\n            <li>描述：<Input type='text' value={fd.desc} onChange={changeFd} name='desc' /></li>\r\n            <li>图片：<input type='file' onChange={imgChange} name='img' /></li>\r\n          </ul>\r\n          <Button size='small' onClick={()=>setFoodData({...fd, status:!fd.status})}>{fd.status ? '下架' : '上架'}</Button>\r\n          <Button size='small' onClick={()=>setChange(!change)}>返回</Button>\r\n          <Button size='small' onClick={()=>updateData()}>保存</Button>\r\n        </div>\r\n      )\r\n    }else{\r\n      // 展示页面\r\n      return(\r\n        <div>\r\n          <img src={window.baseURL + 'upload/' + food.img} alt={food.name}></img>\r\n          <h5>{food.name + (food.status ? '' : \"[以下架]\")}</h5>\r\n          <ul>\r\n            <li>价格：{food.price}</li>\r\n            <li>描述：{food.desc}</li>\r\n            <li>分类：{food.category}</li>\r\n            <li>\r\n              <Button size='small' onClick={() => setChange(!change)}>修改</Button>\r\n              <Button size='small' onClick={ removeItem }>删除</Button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='foodMBox'>\r\n      { getContent() }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(function(props){\r\n  let [foods, setFoods] = useState([])\r\n  let rid = props.match.params.rid\r\n\r\n  useEffect(() => {\r\n    api.get(`/restaurant/${rid}/food`).then(res => {\r\n      setFoods(res.data)\r\n    })\r\n  },[rid])\r\n\r\n  return (\r\n    <div className='foodManage'>\r\n      <Button>\r\n        <Link to={`/restaurant/${rid}/manage/add-food`}>添加菜品</Link>\r\n      </Button>\r\n      <div style={{display:'flex', flexWrap:'wrap'}}>\r\n        {foods.map(food => <FoodItem key={food.id} food={food} obj={ {foods,setFoods} } ></FoodItem> )}\r\n      </div>\r\n    </div>\r\n  )\r\n})","import React, { Component, useState } from 'react'\r\nimport api from './api'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Input, Card } from 'antd'\r\nimport { produce } from 'immer'\r\nconst QRCode = require('qrcode')\r\n\r\n// 传入文本，img，转换后的base64直接设置在img标签上\r\nfunction getQR(text, img){\r\n  QRCode.toDataURL(text, function (err, url) {\r\n    // console.log(text, url)\r\n    img.src = url\r\n  })\r\n}\r\n\r\nvar deskItemStyle = {\r\n  border: '2px #e8e8e8 solid',\r\n  width: '280px',\r\n  padding: '5px',\r\n  margin:'10px 5px'\r\n}\r\n\r\nfunction DeskItem({desk, onDelete}) {\r\n\r\n  let [change, setChange] = useState(false)\r\n  let [deskInfo, setDeskInfo] = useState(desk)\r\n  let [value, setValue] = useState({...desk})\r\n\r\n  function deleteDesk() {\r\n    api.delete(`/restaurant/${deskInfo.rid}/desk/${deskInfo.id}`).then(() => {\r\n      onDelete(deskInfo)\r\n    }).catch(e => console.log(e))\r\n  }\r\n\r\n  function update(e) {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  function submit(){\r\n    api.put(`/restaurant/${deskInfo.rid}/desk/${deskInfo.id}`, value)\r\n      .then(res=> {\r\n        setChange(false)\r\n        setDeskInfo(res.data)\r\n      })\r\n      .catch(e => console.log(e))\r\n  }\r\n\r\n  function getContent(){\r\n\r\n    function showQRbox(){\r\n      getQR(`${window.frontURL}#/landing/r/${deskInfo.rid}/d/${deskInfo.id}`, document.querySelector('#QRcode'))\r\n      document.querySelector('.QRcodeBox').classList.remove('hidden')\r\n    }\r\n\r\n    if(change){\r\n      return (\r\n        <div style={deskItemStyle}>\r\n          <ul>\r\n            <li>桌面名称：<Input type='text' name='name' value={value.name} onChange={update}/> </li>\r\n            <li>容纳人数：<Input type='number' name='capacity' value={value.capacity} onChange={update} /> </li>\r\n          </ul>\r\n          <Button onClick={() => {setChange(false)}}>返回</Button>\r\n          <Button onClick={submit}>提交</Button>\r\n        </div>\r\n      )\r\n    }else{\r\n      return (\r\n        <Card title={deskInfo.name} style={{margin:'10px 5px', width:'280px'}}>\r\n          <p>容纳人数：{deskInfo.capacity}</p>\r\n          <div>\r\n            <Button onClick={showQRbox}>二维码</Button>\r\n            <Button onClick={() => {setChange(true)}}>修改</Button>\r\n            <Button onClick={deleteDesk}>删除</Button>\r\n          </div>\r\n        </Card>\r\n      )\r\n    }\r\n  }\r\n\r\n  return getContent()\r\n}\r\n\r\nexport default class DeskManage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      desk: []\r\n    }\r\n\r\n    this.rid = props.match.params.rid\r\n  }\r\n\r\n  componentDidMount(){\r\n    api.get(`/restaurant/${this.rid}/desk`).then(res => {\r\n      this.setState(produce(state => {\r\n        state.desk = res.data\r\n      }))\r\n    })\r\n  }\r\n\r\n  onDelete = (desk) => {\r\n    var idx = this.state.desk.findIndex(it => it.id === desk.id)\r\n    this.setState(produce(state => {\r\n      state.desk.splice(idx, 1)\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div style={{margin:'10px'}}>\r\n        <Button>\r\n          <Link to={`/restaurant/${this.rid}/manage/add-desk`}>添加桌面</Link>\r\n        </Button>\r\n        <div style={{display:'flex', flexWrap:'wrap'}}>\r\n          {this.state.desk.length > 0 ?\r\n            this.state.desk.map(desk => {\r\n              return <DeskItem onDelete={this.onDelete} key={desk.id} desk={desk} />\r\n            })\r\n            :\r\n            <div></div>\r\n          }\r\n        </div>\r\n        <div className='QRcodeBox hidden'>\r\n          <img id='QRcode' alt='QRcode' />\r\n          <Button onClick={()=>{document.querySelector('.QRcodeBox').classList.add('hidden')}}>确认</Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {useState} from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport api from './api'\r\nimport history from './history'\r\nimport { Button, Input } from 'antd'\r\n\r\nexport default withRouter(function AddFood(props){\r\n  let rid = props.match.params.rid\r\n\r\n  let [foodData, setFoodData] = useState({\r\n    rid,\r\n    name: '',\r\n    price: 0,\r\n    status: '1',\r\n    desc: '',\r\n    category: '',\r\n    img: 'default.jpg',\r\n  })\r\n\r\n  function change(e) {\r\n    setFoodData({\r\n      ...foodData,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  function imgChange(e) {\r\n    let file = e.target.files[0]\r\n    setFoodData({\r\n      ...foodData,\r\n      img: file ? file : foodData.img,\r\n    })\r\n  }\r\n\r\n  function submit(e) {\r\n    var fd = new FormData()\r\n    for(var key in foodData) {\r\n      var val = foodData[key]\r\n      if(val)fd.append(key, val)\r\n    }\r\n\r\n    api.post(`/restaurant/${rid}/food`, fd)\r\n      .then(res => {\r\n        history.goBack()\r\n      }).catch(e=> console.log(e))\r\n  }\r\n\r\n  return(\r\n    <div className='addFoodCard'>\r\n      <h3>添加菜品</h3>\r\n      <ul>\r\n        <li>名称：<Input type='text' onChange={change} name=\"name\" /></li>\r\n        <li>价格：<Input type='text' onChange={change} name=\"price\" /></li>\r\n        <li>分类：<Input type='text' onChange={change} name=\"category\" /></li>\r\n        <li>描述：<Input type='text' onChange={change} name=\"desc\" /></li>\r\n        <li>图片：<input type='file' onChange={imgChange} name=\"img\" /></li>\r\n      </ul>\r\n      <Button onClick={() => {history.push(`/restaurant/${rid}/manage/food` ) }}>返回</Button>\r\n      <Button onClick={submit}>提交</Button>\r\n    </div>\r\n  )\r\n})\r\n","import React, {useState} from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport api from './api'\r\nimport history from './history'\r\nimport { Button, Input } from 'antd'\r\n\r\nexport default withRouter(function AddFood(props){\r\n  let rid = props.match.params.rid\r\n\r\n  let [deskData, setDeskData] = useState({\r\n    rid,\r\n    name: '',\r\n    capacity: 0,\r\n  })\r\n\r\n  function change(e) {\r\n    setDeskData({\r\n      ...deskData,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  function submit(e) {\r\n    var dd = {}\r\n    for(var key in deskData) {\r\n      var val = deskData[key]\r\n      if(val)dd[key] = val\r\n    }\r\n\r\n    api.post(`/restaurant/${rid}/desk`, dd)\r\n      .then(res => {\r\n        history.goBack()\r\n      }).catch(e=> console.log(e))\r\n  }\r\n\r\n  return(\r\n    <div className='addFoodCard'>\r\n      <h3>添加桌面</h3>\r\n      <ul>\r\n        <li>桌面名称：<Input type='text' onChange={change} name=\"name\" /></li>\r\n        <li>容纳人数：<Input type='number' onChange={change} name=\"capacity\" /></li>\r\n      </ul>\r\n      <Button onClick={() => {history.goBack()}}>返回</Button>\r\n      <Button onClick={submit}>提交</Button>\r\n    </div>\r\n  )\r\n})\r\n","import React, { Suspense } from 'react'\r\nimport { Switch, Link, Route, withRouter } from 'react-router-dom'\r\nimport OrderManage from './OrderManage'\r\nimport FoodManage from './FoodManage'\r\nimport DeskManage from './DeskManage'\r\nimport AddFood from './AddFood'\r\nimport AddDesk from './AddDesk'\r\nimport api from './api'\r\nimport createFetcher from './create-fetcher'\r\nimport history from './history'\r\nimport { Button } from 'antd';\r\n\r\nconst userInfoFetcher = createFetcher(async () => {\r\n  return api.get('/userinfo')\r\n  .catch((e) => {\r\n    console.log(e)\r\n    // window.history.hash = '/'\r\n    history.push('/')\r\n  })\r\n})\r\n\r\nfunction RestaurantInfo(){\r\n  var info = userInfoFetcher.read().data\r\n  return(\r\n    <div className='drName'>\r\n      <span title='dining room name'>{info && info.title}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(function(props){\r\n  async function logout() {\r\n    await api.get('/logout')\r\n    userInfoFetcher.clearCache()\r\n    props.history.push('/')\r\n  }\r\n  \r\n  return (\r\n    <div className='show-area'>\r\n      <div className='show-area-title'>\r\n        <p>后台管理系统</p>\r\n        <Button className='logout' onClick={logout}>退出</Button>\r\n      </div>\r\n      <div className='show-area-content'>\r\n        <aside>\r\n          <ul mode=\"inline\" className='system-menu'>\r\n            <Suspense fallback={<div className='drName'>loading...</div>}>\r\n              <RestaurantInfo />\r\n            </Suspense>\r\n            <li>\r\n              <Link to='order'>订单管理</Link>\r\n            </li>\r\n            <li>\r\n              <Link to='food'>菜品管理</Link>\r\n            </li>\r\n            <li>\r\n              <Link to='desk'>桌面管理</Link>\r\n            </li>\r\n          </ul>\r\n        </aside>\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/restaurant/:rid/manage/order\" component={OrderManage}/>\r\n            <Route path=\"/restaurant/:rid/manage/food\" component={FoodManage}/>\r\n            <Route path=\"/restaurant/:rid/manage/desk\" component={DeskManage}/>\r\n            <Route path=\"/restaurant/:rid/manage/add-food\" component={AddFood}/>\r\n            <Route path=\"/restaurant/:rid/manage/add-desk\" component={AddDesk}/>\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  )\r\n})","import React,{useState} from 'react';\r\nimport { Button, Input } from 'antd';\r\nimport api from './api'\r\nimport {withRouter, Link} from 'react-router-dom'\r\n\r\nexport default withRouter(function(props){\r\n  let [name,setName] = useState()\r\n  let [password,setPassword] = useState()\r\n\r\n  async function login(e){\r\n    try{\r\n      let res = await api.post('/login', {name, password})\r\n      props.history.push(`/restaurant/${res.data.id}/manage/order`)\r\n    }catch(e){\r\n      console.dir(e)\r\n      alert(e.response.data.msg)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='login'>\r\n      <h2>餐厅后台管理</h2>\r\n      <Input name='name' placeholder='用户名' onChange={(e) => setName(e.target.value)}/>\r\n      <Input.Password name='password' placeholder='密码' onChange={(e) => setPassword(e.target.value)} />\r\n      <Button type=\"primary\" onClick={(e)=>login(e)}>登陆</Button>\r\n      <Link to='/forget' className='forgetLink' >忘记密码</Link>\r\n      <Link to='/register' className='registerLink' >注册</Link>\r\n    </div>\r\n  )\r\n})","import React,{useState, useRef} from 'react'\r\nimport { Button, Input } from 'antd'\r\nimport api from './api'\r\nimport history from './history'\r\n\r\nexport default function(){\r\n  let [email, setEmail] = useState({})\r\n  const ref = useRef()\r\n\r\n  function submit(){\r\n    // console.log(email)\r\n    api.post('/forget', email)\r\n      .then(res => {\r\n        // console.log(res)\r\n        ref.current.innerHTML = res.data\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='forgetPage'>\r\n      <h3>邮箱验证</h3>\r\n      <Input\r\n        type=\"text\" name=\"email\"\r\n        placeholder='请输入您的邮箱' \r\n        onChange={(e) => setEmail({email: e.target.value})}\r\n      />\r\n      <Button onClick={submit} >确认</Button>\r\n      <Button onClick={() => {history.push('/')}} >返回</Button>\r\n      <p ref={ref}></p>\r\n    </div>\r\n  )\r\n}","import React,{useState} from 'react'\r\nimport { Input, Button } from 'antd'\r\nimport history from './history'\r\nimport api from './api'\r\n\r\nexport default function(){\r\n  let [data, setData] = useState({\r\n\r\n  })\r\n\r\n  function back(){\r\n    history.push('/')\r\n  }\r\n\r\n  function register(){\r\n    console.log(data)\r\n    api.post('/register', data)\r\n      .then(res => {\r\n        history.push('/')\r\n      })\r\n  }\r\n\r\n  function change(e) {\r\n    setData({\r\n      ...data,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='register'>\r\n      <h1>管理员注册</h1>\r\n      <form action = \"/register\" method = \"post\">\r\n        <Input type=\"text\" placeholder='用户名' name=\"name\" value={data.name} onChange={change} />\r\n        <Input type=\"text\" placeholder='邮箱' name=\"email\" value={data.email} onChange={change} />\r\n        <Input type=\"password\" placeholder='密码' name=\"password\" value={data.password} onChange={change} />\r\n        <Input type=\"text\" placeholder='餐馆名称' name=\"title\" value={data.title} onChange={change} />\r\n        <Button onClick={register} >注册</Button><Button onClick={back}>返回主页</Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\n\r\n\r\nexport default function(props) {\r\n\r\n  return (\r\n    <div>\r\n      <h2>下单成功</h2>\r\n      <p>总价：{props.location.state && props.location.state.totalPrice}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\nimport LandingPage from './LandingPage';\r\nimport FoodCart from './FoodCart-class';\r\nimport RestaurantManage from './RestaurantManage';\r\nimport Login from './Login';\r\nimport forget from './forget';\r\nimport register from './register';\r\nimport OrderSuccess from './OrderSuccess'\r\nimport history from './history'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router history={history}>\r\n        <Switch>\r\n          {/* <Route path=\"/\" exact component={HomePage} /> */}\r\n          <Route path=\"/\" exact component={Login} />\r\n          <Route path=\"/landing/r/:rid/d/:did\" component={LandingPage} />\r\n          <Route path=\"/r/:rid/d/:did/c/:count\" component={FoodCart} />\r\n          <Route path=\"/r/:rid/d/:did/order-success\" component={OrderSuccess} />\r\n          \r\n          <Route path=\"/restaurant/:rid/manage\" component={RestaurantManage} />\r\n          <Route path=\"/forget\" component={forget} />\r\n          <Route path=\"/register\" component={register} />\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './set-global'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}